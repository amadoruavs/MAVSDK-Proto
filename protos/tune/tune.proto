syntax = "proto3";

package mavsdk.rpc.tune;

option java_package = "io.mavsdk.tune";
option java_outer_classname = "TuneProto";

// Sends a tune to be played by the vehicle
service TuneService {
  // Send a tune to be played by the system.
  rpc PlayTune(PlayTuneRequest) returns(PlayTuneResponse) {}
}

// represents an element of the tune
enum SongElement {
  STYLE_LEGATO = 0; // After this element, start playing legato
  STYLE_NORMAL = 1; // After this element, start playing normal
  STYLE_STACCATO = 2; // After this element, start playing staccato
  DURATION_1 = 3; // After this element, set the note duration to 1
  DURATION_2 = 4; // After this element, set the note duration to 2
  DURATION_4 = 5; // After this element, set the note duration to 4
  DURATION_8 = 6; // After this element, set the note duration to 8
  DURATION_16 = 7; // After this element, set the note duration to 16
  DURATION_32 = 8; // After this element, set the note duration to 32
  NOTE_A = 9; // Play note A
  NOTE_B = 10; // Play note B
  NOTE_C = 11; // Play note C
  NOTE_D = 12; // Play note D
  NOTE_E = 13; // Play note E
  NOTE_F = 14; // Play note F
  NOTE_G = 15; // Play note G
  NOTE_PAUSE = 16; // Play a rest
  SHARP = 17; // After this element, sharp the note (half a step up)
  FLAT = 18; // After this element, flat the note (half a step down)
  OCTAVE_UP = 19; // After this element, shift the note 1 octave up
  OCTAVE_DOWN = 20; // After this element, shift the note 1 octave down
}

// sends a tune to be played asynchronously
message PlayTuneRequest {
  repeated SongElement tune = 1;
}
message PlayTuneResponse {
  TuneResult result = 1;
}

enum TuneResult {
  SUCCESS = 0; // request succeeded
  INVALID_TEMPO = 1; // invalid tempo (range: 32 - 255)
  TUNE_TOO_LONG = 2; // invalid tune: encoded string must be at most 230 chars
  ERROR = 3; // failed to send the request
}
